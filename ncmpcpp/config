## directories
ncmpcpp_directory = /home/lucas/.config/ncmpcpp
lyrics_directory = /home/lucas/.config/lyrics

## connection settings
mpd_host = 127.0.0.1
mpd_port = 6600
mpd_connection_timeout = 20
mpd_music_dir = /home/lucas/mus/
#mpd_crossfade_time = 5

## visualizer
# visualizer_fifo_path = "/tmp/mpd.fifo"
visualizer_data_source = "/tmp/mpd.fifo"
visualizer_output_name = "visualizer"
visualizer_in_stereo = no
# visualizer_sync_interval = 20 ## deprecated
#spectrum/wave/wave_filled/ellipse
visualizer_type = spectrum
# visualizer_look = ∫∫
#visualizer_color = 41, 83, 119, 155, 185, 215, 209, 203, 197, 161
#visualizer_color = 232, 233, 234, 235, 236, 237, 238, 239, 240, 241
#visualizer_color = 161, 167, 173, 179, 185, 191, 197, 203, 209, 215
visualizer_color = 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44

visualizer_fps = 60
# The amount of frames per second for the visualizer.
visualizer_autoscale = no
# Automatically scale visualizer size.
visualizer_spectrum_smooth_look = yes
# For spectrum visualizer, use unicode block characters for a smoother, more  continuous  look.  This  will  override  the  visualizer_look option. With transparent terminals and visualizer_in_stereo set, artifacts may be visible on the bottom half of the visualization.
visualizer_spectrum_dft_size = 2
## For spectrum visualizer, a value between 1 and 5 inclusive. Specifying a larger value makes the visualizer look at a larger slice of time, which results in less jumpy visualizer output.
visualizer_spectrum_gain = 0
## Gain for spectrum visualizer in dB, larger/smaller values shift bars up/down.
visualizer_spectrum_hz_min = 40
## For spectrum visualizer, left-most frequency of visualizer, must be less than HZ MAX.
visualizer_spectrum_hz_max = 20000
## For spectrum visualizer, right-most frequency of visualizer, must be greater than HZ MIN. # E7 (2637 Hz)

## delays
playlist_disable_highlight_delay = 0
message_delay_time = 2
data_fetching_delay = no

## song format
##
## %l - length
## %f - filename
## %t - title
## %D - directory
## %a - artist
## %A - album artist
## %b - album
## %y - date
## %n - track number
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed only when
## certain tags are present, you can archieve it by grouping them with brackets,
## e.g. '{%a - %t}' will be evaluated to 'ARTIST - TITLE' if both tags are
## present or '' otherwise.  It is also possible to define a list of
## alternatives by providing several groups and separating them with '|',
## e.g. '{%t}|{%f}' will be evaluated to 'TITLE' or 'FILENAME' if the former is
## not present.
##
## Note: If you want to set limit on maximal length of a tag, just put the
## appropriate number between % and character that defines tag type, e.g. to
## make album take max. 20 terminal cells, use '%20b'.
##
## $0 - default window color
## $(1 - 256) colors              $(end)
## $b - bold text                 $/b
## $u - underline text            $/u
## $r - reverse colors            $/r
## $a - alternative character set $/a
##
## If you want to use 256 colors and/or background colors in formats (the naming
## scheme is described below in section about color definitions), it can be done
## with the syntax $(COLOR), e.g. to set the artist tag to one of the
## non-standard colors and make it have yellow background, you need to write
## $(197_yellow)%a$(end). Note that for standard colors this is interchangable
## with attributes listed above.
##
song_library_format                   = {%n - }{%t}|{%f}
alternative_header_first_line_format  = $b$(250) $aqqqqqqqqu$/a$(end) {$(008)%t}|{%f$(end)} $(250)$atqqqqqqqq$/a $(end)$/b
alternative_header_second_line_format = $b {{$(004)%a - $(end)}{$(002)%b$(end)}{$(004) - %y$(end)}}|{%D} $/b
current_item_prefix                   = $b$(008_001)
current_item_suffix                   = $/b$(end)
selected_item_prefix                  = $(008_240)
selected_item_suffix                  = $(end)
current_item_inactive_column_prefix   = $r
current_item_inactive_column_suffix   = $/r
now_playing_prefix                    = $u
now_playing_suffix                    = $/u
modified_item_prefix                  = $(003)+ $(end)
browser_playlist_prefix               = $(013)> $(end)
##nao utilizado, aparentemente:
song_list_format                      = {%a - }{%t}|{$(008)%f$(end)}$R{$(003)(%l)$(end)}
song_status_format                    = {{%a{ %b{ %y }} - }{%t}}|{%f}

## Note: attributes are not supported for the following variables.
song_window_title_format = {%a - }{%t}|{%f}
##
## Note: Below variables are used for sorting songs in browser.  The sort mode
## determines how songs are sorted, and can be used in combination with a sort
## format to specify a custom sorting format.  Available values for
## browser_sort_mode are "name", "mtime", "format" and "noop".
browser_sort_mode = name
browser_sort_format = {%a - }{%t}|{%f} {(%l)}

## columns settings
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of the column)[color of the column]{displayed tag}
##
## Note: Width is by default in %, if you want a column to have fixed size, add
## 'f' after the value, e.g. (10)[white]{a} will be the column that take 10% of
## screen (so the real width will depend on actual screen size), whereas
## (10f)[white]{a} will take 10 terminal cells, no matter how wide the screen
## is.
##
## - color is optional (if you want the default one, leave the field empty).
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes, separated with
##   character ':', e.g. {lr:Length} gives you right aligned column of lengths
##   named "Length".
##
## - define sequence of tags, that have to be displayed in case predecessor is
##   empty in a way similar to the one in classic song format, i.e. using '|'
##   character, e.g. {a|c|p:Owner} creates column named "Owner" that tries to
##   display artist tag and then composer and performer if previous ones are not
##   available.
song_columns_list_format = (22)[yellow]{a|c} (41)[]{f} (28)[red]{b} (4)[red]{ylE} (5f)[green]{lr}

## various settings
# execute_on_song_change = album_art.sh
## Note: Custom command that will be executed each time player state
## changes. The environment variable MPD_PLAYER_STATE is set to the current
## state (either unknown, play, pause, or stop) for its duration.
# execute_on_player_state_change = "pkill -RTMIN+1 i3blocks; pkill -RTMIN+2 i3blocks"

playlist_show_mpd_host = no
playlist_show_remaining_time = no
playlist_shorten_total_times = no
playlist_separate_albums = no

## Note: Possible display modes: classic, columns.
playlist_display_mode        = columns
browser_display_mode         = classic
search_engine_display_mode   = columns
playlist_editor_display_mode = columns
#
discard_colors_if_item_is_selected = no
show_duplicate_tags = yes
incremental_seeking = yes
seek_time = 5
volume_change_step = 5
autocenter_mode = yes
centered_cursor = yes
progressbar_look = =>
#
## Available values: database, playlist.
default_place_to_search_in = database
## Available values: classic, alternative.
user_interface = alternative
#
#Available values: artist, album_artist, date, genre, composer, performer.
media_library_primary_tag = album_artist
media_library_albums_split_by_date = yes
default_find_mode = wrapped
default_tag_editor_pattern = %n - %t
header_visibility = yes
statusbar_visibility = yes
titles_visibility = no
header_text_scrolling = yes
cyclic_scrolling = yes
lines_scrolled = 1
store_lyrics_in_song_dir = yes
lyrics_fetchers = musixmatch, sing365, metrolyrics, justsomelyrics, jahlyrics, plyrics, tekstowo, zeneszoveg, azlyrics, internet
# lyrics_fetchers = azlyrics, genius, musixmatch, sing365, metrolyrics, justsomelyrics, jahlyrics, plyrics, tekstowo, zeneszoveg, internet
follow_now_playing_lyrics = yes
fetch_lyrics_for_current_song_in_background = yes
generate_win32_compatible_filenames = yes
allow_for_physical_item_deletion = no
##
## Note: If you set this variable, ncmpcpp will try to get info from last.fm in
## language you set and if it fails, it will fall back to english. Otherwise it
## will use english the first time.
##
## Note: Language has to be expressed as an ISO 639 alpha-2 code.
##
# lastfm_preferred_language = pt
space_add_mode = always_add
show_hidden_files_in_local_browser = yes
##
## How shall screen switcher work?
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock,
## lyrics, last_fm.
##
screen_switcher_mode = "search_engine, browser, tag_editor, media_library, playlist, lyrics, visualizer, outputs"
#
## Note: You can define startup screen by choosing screen from the list above.
startup_screen = playlist
startup_slave_screen = ""
startup_slave_screen_focus = no
#
locked_screen_width_part = 50
ask_for_locked_screen_width_part = yes
jump_to_now_playing_song_at_start = yes
ask_before_clearing_playlists = yes
clock_display_seconds = yes
display_volume_level = yes
display_bitrate = yes
display_remaining_time = no
#
## Available values: none, basic, extended, perl.
regular_expressions = extended
#
## Note: if below is enabled, ncmpcpp will ignore leading "The" word while
## sorting items in browser, tags in media library, etc.
ignore_leading_the = no
ignore_diacritics = yes
block_search_constraints_change_if_items_found = yes
mouse_support = yes
mouse_list_scroll_whole_page = yes
empty_tag_marker = <empty>
tags_separator = " ; "
tag_editor_extended_numeration = no
media_library_sort_by_mtime = no
enable_window_title = no
##
## 1 - use mpd built-in searching (no regexes, pattern matching)
## 2 - use ncmpcpp searching (pattern matching with support for regexes, but
##     if your mpd is on a remote machine, downloading big database to process
##     it can take a while
## 3 - match only exact values (this mode uses mpd function for searching in
##       database and local one for searching in current playlist)
##
search_engine_default_search_mode = 2
external_editor = vim
use_console_editor = yes

## colors
##
## It is possible to set a background color by setting a color value
## "<foreground>_<background>", e.g. red_black will set foregound color to red
## and background color to black.
##
## In addition, for terminals that support 256 colors it is possible to set one
## of them by using a number in range [1, 256] instead of color name,
## e.g. numerical value corresponding to red_black is 2_1. To find out if the
## terminal supports 256 colors, run ncmpcpp and check out the bottom of the
## help screen for list of available colors and their numerical values.
##
## What is more, there are two special values for the background color:
## "transparent" and "current". The first one explicitly sets the background to
## be transparent, while the second one allows you to preserve current
## background color and change only the foreground one. It's used implicitly
## when background color is not specified.
##
## Moreover, it is possible to attach format information to selected color
## variables by appending to their end a colon followed by one or more format
## flags, e.g. black:b or red:ur. The following variables support this syntax:
## visualizer_color, color1, color2, empty_tag_color, volume_color,
## state_line_color, state_flags_color, progressbar_color,
## progressbar_elapsed_color, player_state_color, statusbar_time_color,
## alternative_ui_separator_color.
##
## Note: due to technical limitations of older ncurses version, if 256 colors
## are used there is a possibility that you'll be able to use only colors with
## transparent background.

colors_enabled = yes

main_window_color              = white
header_window_color            = white
statusbar_color                = white
volume_color                   = 010:b
state_line_color               = white
player_state_color             = 013:b
state_flags_color              = 013
progressbar_color              = green:b
progressbar_elapsed_color      = green:b
statusbar_time_color           = green:b
alternative_ui_separator_color = black
window_border_color            = black
active_window_border           = black
empty_tag_color                = cyan
